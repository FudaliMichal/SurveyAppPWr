@page "/Answer"
@using System.Drawing
@using SurveyAppPWr.Data.Survey
@using SurveyAppPWr.Models.Survey
@using SurveyAppPWr.Services
<h3>Answer</h3>

<Modal @ref="_modal" Title="@_modalTitle" IsScrollable="true" Size="ModalSize.ExtraLarge">
    <BodyTemplate>
        <div>Author: @_tempSurvey.Author</div>
        <div>Date of creation: @_tempSurvey.CreationDate</div>
        
        <div style="margin-top: 20px">
            @if (true)
            {
                _questionNr = 1;
            }
            
            @foreach (var q in _questionfills)
            {

                switch (q.SQuestionType)
                {
                    case true:
                        <div>@_questionNr. @q.SQuestionText</div>
                        
                        <InputText @bind-Value="q.OpenAnswer" style="width: 400px; height: 50px;"></InputText>

                        break;

                    case false:
                        <div>@_questionNr. @q.SQuestionText</div>

                        _answerNr = 'a';

                        foreach (var a in q.SurveyAnswers)
                        {
                            <div style="margin-left: 20px; cursor: pointer;" @onclick="() => ToggleAnswer(a)">
                                (@_answerNr) @a.SAnswerText
                                @if (a.IsChosen)
                                {
                                    <span style="color: green;">âœ”</span>
                                }
                            </div>
                            _answerNr++;
                        }

                        break;
                }

                _questionNr++;
            }
        </div>

    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" @onclick="OnHideModalClick">Save your answers</Button>
    </FooterTemplate>
</Modal>

<div class="scrollable-container">
    <div class="grid">
        @if (_surveyList != null)
        {
            foreach (var survey in _surveyList)
            {
                <div class="grid-item">
                    @survey.SurveyTitle @survey.Author @survey.CreationDate @survey.IsPublic

                    <div class="button-container">
                        <Button Color="ButtonColor.Primary" @onclick="() => OnShowModalClick(survey)">Answer this survey</Button>
                    </div>
                </div>
                }
            }
    </div>
</div>


@inject AuthenticationStateProvider AuthProvider
@inject ApplicationDbService DbService

@code {

    private List<SurveyModel>? _surveyList;
    private SurveyModel _tempSurvey;
    private string _curUserId = string.Empty;
    private Modal _modal = default!;
    private string _modalTitle = string.Empty;
    private int _questionNr;
    private char _answerNr = 'a';
    private List<SurveyFill> _questionfills = [];


    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthProvider.GetAuthenticationStateAsync()).User;
        var userStringId = user.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
        _curUserId = userStringId;

        _surveyList = await DbService.GetPublicSurveysAsync();
    }



    private async Task OnShowModalClick(SurveyModel survey)
    {
        _questionNr = 1;
        _tempSurvey = survey;
        _modalTitle = "Title: " + _tempSurvey.SurveyTitle;
        _questionfills.Clear();
        
        await CreateAnswerList(_tempSurvey);
        await _modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await _modal.HideAsync();
    }

    private async Task CreateAnswerList(SurveyModel s)
    {
        foreach (var q in s.SurveyQuestions)
        {
            var qFill = new SurveyFill
            {
                SurveyId = s.SurveyId,
                SQuestionId = q.SQuesionId,
                SQuestionText = q.SQuestionText,
                SQuestionType = q.SQuestionType,
                UserId = _curUserId,
                OpenAnswer = string.Empty,
                SurveyAnswers = []
            };
            
            if (q.SQuestionType == false)
            {
                foreach (var a in q.SAnswers)
                {
                    var ans = new SurveyAnswerFill
                    {
                        SAnswerId = a.SAnswerId,
                        SAnswerText = a.SAnswerText,
                        IsChosen = false,
                        SQuestionId = q.SQuesionId
                    };
                    
                    qFill.SurveyAnswers.Add(ans);
                }
            }

            _questionfills.Add(qFill);
        }
    }
    
    private async Task ToggleAnswer(SurveyAnswerFill answer)
    {
        answer.IsChosen = !answer.IsChosen;
    }

}